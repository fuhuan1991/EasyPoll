{"version":3,"sources":["QuestionForm.jsx","client.js","Main.jsx","index.js"],"names":["QuestionForm","props","onNameChange","e","value","target","setState","questionName","onAddOption","options","state","name","onTypeChange","type","onOptionChange","index","temp","onOptionDeletion","splice","onConfirm","o","checkState","hasName","trim","hasOptions","emptyOptions","option","editIndex","question","questions","map","key","className","DeleteOutlined","onClick","bind","onChange","placeholder","this","randerOptions","okToSumbit","Group","onCancel","disabled","React","Component","checkStatus","response","ok","error","Error","statusText","json","then","Promise","reject","Title","Typography","Paragraph","disabledDate","current","moment","endOf","add","Main","openEditMod","QuestionId","editMod","currentEditId","closeEditMod","onQuestionConfirm","data","onQuestionDeletion","renderQuestions","i","EditOutlined","onTitleChange","title","check","length","onCreate","j","endTime","endDate","format","fetch","headers","method","body","JSON","stringify","text","poll_id","console","log","window","location","replace","onDateChange","date","setXdaysLater","x","Fragment","style","marginTop","PlusCircleOutlined","CarryOutOutlined","visible","footer","maskClosable","destroyOnClose","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.70176add.chunk.js","sourcesContent":["import React from 'react';\nimport { Input, Button, Radio } from 'antd';\nimport {\n    DeleteOutlined,\n} from '@ant-design/icons';\n\n\nclass QuestionForm extends React.Component {\n    constructor(props) {\n        super(props);\n        if (props.editIndex >= 0) {\n            const question = props.questions[props.editIndex];\n            this.state = {\n                questionName: question.name,\n                type: question.type,\n                options: [...question.options],\n            };\n        } else {\n            this.state = {\n                questionName: '',\n                type: 'SINGLE',\n                options:[],\n            };\n        }\n    }\n\n    onNameChange = (e) => {\n        const { value } = e.target;\n        this.setState({\n            questionName: value,\n        });\n    }\n\n    onAddOption = () => {\n        const option = {\n            name: '',\n        };\n        this.setState({\n            options: [...this.state.options, option],\n        })\n    }\n\n    componentDidMount(){}\n\n    onTypeChange = (e) => {\n        this.setState({\n            type: e.target.value,\n          });\n    }\n\n    onOptionChange = (index, e) => {\n  \n        const { value } = e.target;\n        const temp = [...this.state.options];\n        temp[index].name = value;\n\n        this.setState({\n            options: temp,\n        });\n    }\n\n    onOptionDeletion = (index) => {\n        const temp = [...this.state.options];\n        temp.splice(index, 1);\n        this.setState({\n            options: temp,\n        });\n    }\n\n    onConfirm = () => {\n        const o = {\n            name: this.state.questionName,\n            options: this.state.options,\n            type: this.state.type,\n        };\n        this.props.onConfirm(o);\n    }\n\n    checkState = () => {\n        const hasName = !!this.state.questionName.trim();\n        let hasOptions = false;\n        let emptyOptions = false;\n        for (const option of this.state.options) {\n            hasOptions = true;\n            if (option.name.trim() === '') emptyOptions = true;\n        }\n        return hasName && hasOptions && !emptyOptions;\n    }\n\n    randerOptions(options) {\n        return options.map((option, index) => \n            <div key={index} className='section'>\n                <span>Option {index+1}</span>\n                <DeleteOutlined onClick={this.onOptionDeletion.bind(this, index)}/>\n                <Input onChange={this.onOptionChange.bind(this, index)} value={option.name} placeholder='Optioin' />\n            </div>\n        );\n    }\n\n    render() {\n\n        const options = this.randerOptions(this.state.options);\n        const okToSumbit = this.checkState();\n\n        return (\n            <div className='question_form'>\n                <span>Question Name:</span>\n                <Input onChange={this.onNameChange} value={this.state.questionName} placeholder='Question Name' />\n                <div className='section'>\n                    <Radio.Group onChange={this.onTypeChange} value={this.state.type}>\n                        <Radio value={'MULTIPLE'}>Multiple Choice</Radio>\n                        <Radio value={'SINGLE'}>Single Choice</Radio>\n                    </Radio.Group>\n                </div>\n                {options}\n                <Button onClick={this.onAddOption} type='primary'>Add a New Option</Button>\n                <div className='footer'>\n                    <Button onClick={this.props.onCancel}>Cancel</Button>\n                    <Button onClick={this.onConfirm} type='primary' disabled={!okToSumbit}>Confirm</Button>\n                </div>\n                \n            </div>\n        );\n    }\n}\n\nexport default QuestionForm;","import fetch from 'unfetch';\n\n// check the status of all sort of response\nconst checkStatus = response => {\n    if (response.ok) {\n      return response;\n    } else {\n        let error = new Error(response.statusText);\n        error.response = response;\n        response.json().then(e => {\n          error.error = e;\n        });\n        return Promise.reject(error);\n      }\n  }\n\n// create a new Poll\nexport const createPoll = data => fetch('api/create', {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    method: 'POST',\n    body: JSON.stringify(data),\n}).then(checkStatus)\n  .then(response => {\n    return response.text();\n  }, e => {\n    return e;\n  }\n);\n\n","import React from 'react';\nimport moment from 'moment';\nimport { Input, Button, Modal, Typography, DatePicker } from 'antd';\nimport QuestionForm from './QuestionForm';\nimport {\n    DeleteOutlined,\n    EditOutlined,\n    PlusCircleOutlined,\n    CarryOutOutlined,\n} from '@ant-design/icons';\nimport { createPoll } from './client';\n\nconst { Title, Paragraph } = Typography;\n  \nfunction disabledDate(current) {\n    // Can not select days before today and days after 14 days later.\n    return current < moment().endOf('day') || current > moment().add(14, 'days');\n}\n\nclass Main extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            title: '',\n            editMod: false,\n            currentEditId: -1,\n            questions: [],\n            endDate: moment().endOf('day'),\n        };\n    }\n\n    componentDidMount(){\n        // console.log(this.state.endDate)\n    }\n\n    openEditMod = (QuestionId) => {\n\n        this.setState({\n            editMod: true,\n            currentEditId: QuestionId,\n        });\n    };\n\n    closeEditMod = () => {\n        this.setState({\n            editMod: false,\n        });\n    }\n\n    onQuestionConfirm = (data) => {\n        if (this.state.currentEditId >= 0 ) {\n            // edit mod\n            const temp = this.state.questions;\n            temp[this.state.currentEditId] = data;\n            this.setState({\n                questions: temp,\n                currentEditId: -1,\n            });\n        } else {\n            // create mod\n            const temp = [...this.state.questions, data];\n            this.setState({\n                questions: temp,\n            });\n        }\n        this.closeEditMod();\n    }\n\n    onQuestionDeletion = (index) => {\n        const temp = [...this.state.questions];\n        temp.splice(index, 1);\n        this.setState({\n            questions: temp,\n        });\n    }\n\n    renderQuestions = (questions) => {\n        return questions.map((question, index) => {\n            const options = question.options.map((option, i) => <div className='option' key={i + option.name}>option {i+1}:{option.name}</div>);\n            return (\n                <div key={index + question.name}>\n                    <div className='question_title'>\n                        Question {index+1}: \n                        <span className='blue'>({question.type==='MULTIPLE'? 'Multiple choice' : 'Single choice'})</span> \n                        {question.name}\n                        <DeleteOutlined onClick={this.onQuestionDeletion.bind(this, index)} />\n                        <EditOutlined onClick={this.openEditMod.bind(this, index)} />\n                    </div>\n                    <div>{options}</div>\n                </div>\n            );\n        });\n    }\n\n    onTitleChange = (e) => {\n        const { value } = e.target;\n        this.setState({\n            title: value,\n        });\n    }\n\n    check = () => {\n        return !!this.state.title.trim() && this.state.questions.length > 0\n    }\n\n    onCreate = () => {\n\n        const questions = this.state.questions;\n\n        // Attach an index for every question and every option to maintain order\n        for (let i = 0; i < questions.length; i++) {\n            questions[i].index = i;\n\n            for (let j = 0; j < questions[i].options.length; j++) {\n                questions[i].options[j].index = j;\n            }\n        }\n\n        const o = {\n            title: this.state.title.trim(),\n            questions: questions,\n            endTime: this.state.endDate.format('YYYY-MM-D hh:mm:ss'),\n        };\n        // The response from back-end will be the ID of the new poll\n        createPoll(o).then(\n            (poll_id) => {\n                console.log('new poll ID: ' + poll_id);\n                // Now the new poll isready and we got the ID, time to redirect!\n                window.location.replace('/admin/' + poll_id); \n            }, \n            (e) => {\n                window.location.replace('/error/');\n            });\n    }\n\n    onDateChange = (date) => {\n        this.setState({\n            endDate: date,\n        });\n    }\n\n    setXdaysLater = (x) => {\n        this.setState({\n            endDate:  moment().endOf('day').add(x, 'days'),\n        });\n    }\n\n    render() {\n\n        const questions = this.renderQuestions(this.state.questions);\n        \n        return (\n            <React.Fragment>\n                <div className=\"main\">\n                    <Typography>\n                        <Title>EasyPoll</Title>\n                        <Paragraph>\n                            This is an online polling application. Yout can start a poll among your friends within 1 min. \n                            <ul>\n                                <li>Easy to setup</li>\n                                <li>No need to sign in</li>\n                                <li>Multiple question types</li>\n                            </ul>\n                        </Paragraph>\n                    </Typography>\n                    \n                    <Title>Start a New Poll</Title>\n\n                    <span className='small-title'>Title:</span>\n                    <Input value={this.state.title} onChange={this.onTitleChange} placeholder=\"Title of your poll\" />\n\n                    <div style={{marginTop: '2rem'}}></div>\n\n                    <span className='small-title'>Valid Time:</span>\n                    <div className='date'>\n                        <span>From today to </span>\n                        <DatePicker\n                            format=\"YYYY-MM-DD\"\n                            disabledDate={disabledDate}\n                            value={this.state.endDate}\n                            onChange={this.onDateChange}\n                        />\n                        <Button className='date-btn' onClick={this.setXdaysLater.bind(this, 1)}>+1day</Button>\n                        <Button className='date-btn' onClick={this.setXdaysLater.bind(this, 3)}>+3days</Button>\n                        <Button className='date-btn' onClick={this.setXdaysLater.bind(this, 7)}>+7days</Button>\n                        <div className='date-text'>This poll expires at <span className='blue'>{this.state.endDate.format('MMMM Do')}</span> 23:59</div>\n                    </div>\n\n                    <div style={{marginTop: '2rem'}}></div>\n                    <span className='small-title'>Questions:</span>\n\n                    <div className='questions'>{questions}</div>\n                    <Button type=\"primary\" onClick={this.openEditMod.bind(this, -1)}><PlusCircleOutlined />Add a new question</Button>\n                    &nbsp;&nbsp;&nbsp;&nbsp;\n                    <Button type=\"primary\" \n                        disabled={!this.check()} \n                        onClick={this.onCreate}\n                    >\n                        <CarryOutOutlined />Create it!\n                    </Button>\n                </div>\n                <Modal\n                    title=\"New Question\"\n                    visible={this.state.editMod}\n                    footer={null}\n                    onCancel={this.closeEditMod}\n                    maskClosable={false}\n                    destroyOnClose={true}\n                >\n                    <QuestionForm \n                        onCancel={this.closeEditMod} \n                        onConfirm={this.onQuestionConfirm} \n                        questions={this.state.questions}\n                        editIndex={this.state.currentEditId}\n                    />\n                </Modal>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default Main;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport Main from './Main';\nimport 'antd/dist/antd.css';\n\nReactDOM.render(\n  <Main />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}